extends licenses_with_c_like_comments




snippet If
if (${1:condition}) ${2:/* TODO */};;
endsnippet



snippet Unless
if (!${1:condition}) ${2:/* TODO */};
endsnippet



snippet Ife
${1:condition} ? ${2:/* TODO */} : ${3:/* TODO */};
endsnippet



snippet Unlesse
${1:!condition}) ? ${2:/* TODO */} : ${3:/* TODO */};
endsnippet



snippet if
if (${1:condition}) {
    ${2:// TODO}
}
endsnippet



snippet ife
if (${1:condition}) {
    ${2:// TODO}
}
else {
    ${3:// TODO}
}
endsnippet



snippet ifee
if (${1:condition}) {
    ${2:// TODO}
}
else if (${3:condition}) {
    ${4:// TODO}
}
else {
    ${5:// TODO}
}
endsnippet



snippet unless
if (!${1:condition}) {
    ${2:// TODO}
}
endsnippet



snippet unlesse
if (!${1:condition}) {
    ${2:// TODO}
}
else {
    ${3:// TODO}
}
endsnippet



snippet unlessee
if (!${1:condition}) {
    ${2:// TODO}
}
else if (${3:condition}) {
    ${4:// TODO}
}
else {
    ${5:// TODO}
}
endsnippet



snippet switch
switch (${1:variable}) {
case ${2:value}:
    ${3:// TODO;}
    break;${4}
} /* switch $1 */
endsnippet



snippet alert
alert("${1:text}");
endsnippet



snippet confirm
confirmation("${1:text}");
endsnippet


snippet prompt
prompt(${1:"${2:text}"}, ${3:"${4:default value}"});
endsnippet



snippet for
for (var ${1:i} = ${2:0}; $1 ${3:<=} ${4:number}; $1${5:++}) {
    ${0:// TODO}
}
endsnippet



snippet For
for (var ${1:i} = ${2:number}; $1 ${3:>=} ${4:0}; $1${5:--}) {
    ${0:// TODO}
}
endsnippet



snippet each
for (var ${1:i} = 0; $1 < ${2:array}.length; i++) {
    ${0:todo}
}
endsnippet



snippet Each
for (var ${1:i} = 0; $1 < ${2:${3:array}.length}; i++) ${4:todo};
endsnippet



snippet "\b(each_?key|for_?in)$" "for (<key> in <object>) { ..." r
for (${1:key} in ${2:object}) {
    ${0:document.write($2[$1] + "\n");}
}
endsnippet



snippet "\bf(unction)?" "function" r
function ${1:name }${3:(${2:args})} {
    $0
}
endsnippet



snippet "\bF(unction)?" "function" r
function (${2:arg}) { ${3:/* TODO */} }
endsnippet



snippet until
while (! ${1:expression} ) {
    ${0:// TODO}
}
endsnippet



snippet Until
do {
    ${0:// TODO}
} while (! ${1:expression} );
endsnippet



snippet while
while ( ${1:expression} ) {
    ${0:// TODO}
}
endsnippet



snippet While
do {
    ${0:// TODO}
while ( ${1:expression} );
endsnippet



snippet try
try {
    ${1:TODO}
}
catch ${2:(${3:err}) }{
    ${0:alert($3.description);}
}
endsnippet



snippet timestamp "new Date().getTime()"
new Date().getTime()
endsnippet



snippet "\b(log|debug|warn|error|info)" "console.(log|debug|warn|error|info)" r
console.`!p snip.rv=match.group(1)`(${1:"${2}"});
endsnippet

# vim: ts=4 sw=4 expandtab:
